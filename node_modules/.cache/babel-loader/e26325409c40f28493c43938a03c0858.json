{"ast":null,"code":"import _objectSpread from\"/Users/austin/Projects/our-future/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{createStore,applyMiddleware,compose,combineReducers}from\"redux\";import{routerMiddleware}from\"react-router-redux\";import{connectRouter}from'connected-react-router';import thunk from\"redux-thunk\";import{createBrowserHistory}from\"history\";import{camelCase}from\"lodash\";// REDUCERS\nvar reducers={};var defaults={};var reducersReq=require.context(\"../reducers\",true,/^(.*\\.(js$))[^.]*$/im);reducersReq.keys().forEach(function(key){var reducerName=camelCase(key.match(/.\\/([\\w-]+).js/)[1]);reducers[reducerName]=reducersReq(key).default;defaults[reducerName]=reducersReq(key)[\"\".concat(reducerName,\"ReducerDefaultState\")];});export var history=createBrowserHistory();var initialState={};var enhancers=[];var middleware=[thunk,routerMiddleware(history)];var composedEnhancers=compose.apply(void 0,[applyMiddleware.apply(void 0,middleware)].concat(enhancers));var store=createStore(combineReducers(_objectSpread({router:connectRouter(history)},reducers)),initialState,composedEnhancers);export default store;","map":{"version":3,"sources":["/Users/austin/Projects/our-future/src/store/index.js"],"names":["createStore","applyMiddleware","compose","combineReducers","routerMiddleware","connectRouter","thunk","createBrowserHistory","camelCase","reducers","defaults","reducersReq","require","context","keys","forEach","key","reducerName","match","default","history","initialState","enhancers","middleware","composedEnhancers","store","router"],"mappings":"uJAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,OAAvC,CAAgDC,eAAhD,KAAuE,OAAvE,CACA,OAASC,gBAAT,KAAiC,oBAAjC,CACA,OAASC,aAAT,KAA8B,wBAA9B,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,oBAAT,KAAqC,SAArC,CACA,OAASC,SAAT,KAA0B,QAA1B,CAEA;AACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAMC,CAAAA,WAAW,CAAGC,OAAO,CAACC,OAAR,CAAgB,aAAhB,CAA+B,IAA/B,CAAqC,sBAArC,CAApB,CACAF,WAAW,CAACG,IAAZ,GAAmBC,OAAnB,CAA2B,SAAAC,GAAG,CAAI,CAChC,GAAMC,CAAAA,WAAW,CAAGT,SAAS,CAACQ,GAAG,CAACE,KAAJ,CAAU,gBAAV,EAA4B,CAA5B,CAAD,CAA7B,CACAT,QAAQ,CAACQ,WAAD,CAAR,CAAwBN,WAAW,CAACK,GAAD,CAAX,CAAiBG,OAAzC,CACAT,QAAQ,CAACO,WAAD,CAAR,CAAwBN,WAAW,CAACK,GAAD,CAAX,WAAoBC,WAApB,wBAAxB,CACD,CAJD,EAMA,MAAO,IAAMG,CAAAA,OAAO,CAAGb,oBAAoB,EAApC,CAEP,GAAMc,CAAAA,YAAY,CAAG,EAArB,CACA,GAAMC,CAAAA,SAAS,CAAG,EAAlB,CACA,GAAMC,CAAAA,UAAU,CAAG,CAACjB,KAAD,CAAQF,gBAAgB,CAACgB,OAAD,CAAxB,CAAnB,CAEA,GAAMI,CAAAA,iBAAiB,CAAGtB,OAAO,MAAP,SACxBD,eAAe,MAAf,QAAmBsB,UAAnB,CADwB,SAErBD,SAFqB,EAA1B,CAKA,GAAMG,CAAAA,KAAK,CAAGzB,WAAW,CACvBG,eAAe,gBACbuB,MAAM,CAAErB,aAAa,CAACe,OAAD,CADR,EAEVX,QAFU,EADQ,CAKvBY,YALuB,CAMvBG,iBANuB,CAAzB,CASA,cAAeC,CAAAA,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose, combineReducers } from \"redux\"\nimport { routerMiddleware } from \"react-router-redux\"\nimport { connectRouter } from 'connected-react-router'\nimport thunk from \"redux-thunk\"\nimport { createBrowserHistory } from \"history\"\nimport { camelCase } from \"lodash\"\n\n// REDUCERS\nlet reducers = {}\nlet defaults = {}\nconst reducersReq = require.context(\"../reducers\", true, /^(.*\\.(js$))[^.]*$/im)\nreducersReq.keys().forEach(key => {\n  const reducerName = camelCase(key.match(/.\\/([\\w-]+).js/)[1])\n  reducers[reducerName] = reducersReq(key).default\n  defaults[reducerName] = reducersReq(key)[`${reducerName}ReducerDefaultState`]\n})\n\nexport const history = createBrowserHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nconst store = createStore(\n  combineReducers({\n    router: connectRouter(history),\n    ...reducers\n  }),\n  initialState,\n  composedEnhancers\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}