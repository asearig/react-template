{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Projects/our-future/src/pages/Login/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport './styles.js';\nimport useStyles from \"./styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { TextField, Button } from '@material-ui/core';\nimport { useFormik } from \"formik\";\nimport { setCurrentUser, setError } from \"../../actions/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  routes = [],\n  ...props\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const initialValues = useSelector(state => state.user);\n\n  if (initialValues.error === true) {\n    alert(\"Wrong Secret\").then(dispatch(setError(false)));\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      name: initialValues.name,\n      secret: ''\n    },\n    onSubmit: values => {\n      console.log(\"values\", values);\n      dispatch(setCurrentUser(values.name, values.secret));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.form,\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.textContainer,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Name\",\n          name: \"name\",\n          type: \"text\",\n          onChange: formik.handleChange,\n          value: formik.values.name,\n          className: classes.textField,\n          classes: {\n            root: classes.textRoot\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Secret\",\n          name: \"secret\",\n          type: \"password\",\n          onChange: formik.handleChange,\n          value: formik.values.secret,\n          className: classes.textField,\n          classes: {\n            root: classes.textRoot\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        type: \"submit\",\n        className: classes.submitButton,\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"GJauoNua4xM/LZgxN2/Q4vUQQ8s=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useFormik];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/austin/Projects/our-future/src/pages/Login/index.jsx"],"names":["React","useStyles","useDispatch","useSelector","TextField","Button","useFormik","setCurrentUser","setError","Login","routes","props","classes","dispatch","initialValues","state","user","error","alert","then","formik","name","secret","onSubmit","values","console","log","login","form","handleSubmit","textContainer","handleChange","textField","root","textRoot","submitButton"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport './styles.js'\nimport useStyles from \"./styles\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { TextField, Button } from '@material-ui/core'\nimport { useFormik } from \"formik\"\nimport { setCurrentUser, setError } from \"../../actions/user\"\n\nconst Login = ({ routes = [], ...props }) => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const initialValues = useSelector(state => state.user)\n  if(initialValues.error === true) {\n    alert(\"Wrong Secret\")\n      .then(dispatch(setError(false)))\n  }\n\n  const formik = useFormik({\n    initialValues: {\n      name: initialValues.name,\n      secret: ''\n    },\n    onSubmit: values => {\n      console.log(\"values\", values)\n      dispatch(setCurrentUser(values.name, values.secret))\n    }\n  })\n\n  return (\n    <div className={classes.login}>\n      <form className={classes.form} onSubmit={formik.handleSubmit}>\n        <div className={classes.textContainer}>\n          <TextField \n            label=\"Name\" \n            name=\"name\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            value={formik.values.name}\n            className={classes.textField}\n            classes={{\n              root: classes.textRoot\n            }}/>\n          <TextField \n            label=\"Secret\" \n            name=\"secret\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.secret}\n            className={classes.textField}\n            classes={{\n              root: classes.textRoot\n            }}/>\n        </div>\n        <Button variant=\"contained\" type=\"submit\" className={classes.submitButton}>Enter</Button>\n      </form>\n    </div>\n  )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}