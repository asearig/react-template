{"ast":null,"code":"import { createStore, applyMiddleware, compose, combineReducers } from \"./node_modules/redux\";\nimport { routerMiddleware } from \"./node_modules/react-router-redux\";\nimport { connectRouter } from 'connected-react-router';\nimport thunk from \"./node_modules/redux-thunk\";\nimport { createBrowserHistory } from \"./node_modules/history\";\nimport { camelCase } from \"./node_modules/lodash\"; // REDUCERS\n\nlet reducers = {};\nlet defaults = {};\n\nconst reducersReq = require.context(\"../reducers\", true, /^(.*\\.(js$))[^.]*$/im);\n\nreducersReq.keys().forEach(key => {\n  const reducerName = camelCase(key.match(/.\\/([\\w-]+).js/)[1]);\n  reducers[reducerName] = reducersReq(key).default;\n  defaults[reducerName] = reducersReq(key)[`${reducerName}ReducerDefaultState`];\n});\nexport const history = createBrowserHistory();\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [thunk, routerMiddleware(history)];\nconst composedEnhancers = compose(applyMiddleware(...middleware), ...enhancers);\nconst store = createStore(combineReducers({\n  router: connectRouter(history),\n  ...reducers\n}), initialState, composedEnhancers);\nexport default store;","map":{"version":3,"sources":["/Users/austin/Projects/our-future/src/store/index.js"],"names":["createStore","applyMiddleware","compose","combineReducers","routerMiddleware","connectRouter","thunk","createBrowserHistory","camelCase","reducers","defaults","reducersReq","require","context","keys","forEach","key","reducerName","match","default","history","initialState","enhancers","middleware","composedEnhancers","store","router"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,sBAAvE;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,SAAT,QAA0B,uBAA1B,C,CAEA;;AACA,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,QAAQ,GAAG,EAAf;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAACC,OAAR,CAAgB,aAAhB,EAA+B,IAA/B,EAAqC,sBAArC,CAApB;;AACAF,WAAW,CAACG,IAAZ,GAAmBC,OAAnB,CAA2BC,GAAG,IAAI;AAChC,QAAMC,WAAW,GAAGT,SAAS,CAACQ,GAAG,CAACE,KAAJ,CAAU,gBAAV,EAA4B,CAA5B,CAAD,CAA7B;AACAT,EAAAA,QAAQ,CAACQ,WAAD,CAAR,GAAwBN,WAAW,CAACK,GAAD,CAAX,CAAiBG,OAAzC;AACAT,EAAAA,QAAQ,CAACO,WAAD,CAAR,GAAwBN,WAAW,CAACK,GAAD,CAAX,CAAkB,GAAEC,WAAY,qBAAhC,CAAxB;AACD,CAJD;AAMA,OAAO,MAAMG,OAAO,GAAGb,oBAAoB,EAApC;AAEP,MAAMc,YAAY,GAAG,EAArB;AACA,MAAMC,SAAS,GAAG,EAAlB;AACA,MAAMC,UAAU,GAAG,CAACjB,KAAD,EAAQF,gBAAgB,CAACgB,OAAD,CAAxB,CAAnB;AAEA,MAAMI,iBAAiB,GAAGtB,OAAO,CAC/BD,eAAe,CAAC,GAAGsB,UAAJ,CADgB,EAE/B,GAAGD,SAF4B,CAAjC;AAKA,MAAMG,KAAK,GAAGzB,WAAW,CACvBG,eAAe,CAAC;AACduB,EAAAA,MAAM,EAAErB,aAAa,CAACe,OAAD,CADP;AAEd,KAAGX;AAFW,CAAD,CADQ,EAKvBY,YALuB,EAMvBG,iBANuB,CAAzB;AASA,eAAeC,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose, combineReducers } from \"./node_modules/redux\"\nimport { routerMiddleware } from \"./node_modules/react-router-redux\"\nimport { connectRouter } from 'connected-react-router'\nimport thunk from \"./node_modules/redux-thunk\"\nimport { createBrowserHistory } from \"./node_modules/history\"\nimport { camelCase } from \"./node_modules/lodash\"\n\n// REDUCERS\nlet reducers = {}\nlet defaults = {}\nconst reducersReq = require.context(\"../reducers\", true, /^(.*\\.(js$))[^.]*$/im)\nreducersReq.keys().forEach(key => {\n  const reducerName = camelCase(key.match(/.\\/([\\w-]+).js/)[1])\n  reducers[reducerName] = reducersReq(key).default\n  defaults[reducerName] = reducersReq(key)[`${reducerName}ReducerDefaultState`]\n})\n\nexport const history = createBrowserHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nconst store = createStore(\n  combineReducers({\n    router: connectRouter(history),\n    ...reducers\n  }),\n  initialState,\n  composedEnhancers\n)\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}